version: '3.8'

services:
  # PostgreSQL for storing conversations, feedback, and user data
  postgres:
    image: postgres:13
    container_name: travel_rag_postgres
    environment:
      POSTGRES_DB: travel_recommendations_db
      POSTGRES_USER: travel_user
      POSTGRES_PASSWORD: travel_pass_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - travel_rag_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U travel_user -d travel_recommendations_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch for vector search and document retrieval
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: travel_rag_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - travel_rag_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana for monitoring RAG system performance
  grafana:
    image: grafana/grafana:latest
    container_name: travel_rag_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=travel_admin_2024
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - travel_rag_network
    depends_on:
      postgres:
        condition: service_healthy

  # pgAdmin for PostgreSQL management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: travel_rag_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@travel-rag.com
      PGADMIN_DEFAULT_PASSWORD: travel_admin_2024
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - travel_rag_network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: travel_rag_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - travel_rag_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  elasticsearch_data:
    driver: local
  grafana_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  travel_rag_network:
    driver: bridge